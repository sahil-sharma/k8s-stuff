alertmanager:
  enabled: true

  service:
    type: ClusterIP
  persistentVolume:
    enabled: false

nodeExporter:
  enabled: true
  service:
    type: ClusterIP

pushgateway:
  enabled: false

server:
  persistentVolume:
    enabled: false
  service:
    type: ClusterIP
  resources:
    requests:
      memory: 200Mi
      cpu: 100m
    limits:
      memory: 500Mi
      cpu: 200m
  ingress:
    enabled: true
    ingressClassName: nginx
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /
    hosts:
      - metrics.local.io
    pathType: Prefix
    paths:
      - /

serverFiles:
  alerting_rules.yml:
    groups:
    - name: blackbox-exporter-alerts
      rules:
        - alert: KeycloakDown
          expr: probe_success{job="blackbox-keycloak"} == 0
          for: 1m
          labels:
            severity: critical
          annotations:
            summary: "Keycloak is down"
            description: "Keycloak HTTP probe failed for more than 1 minute."

        - alert: PostgresDown
          expr: probe_success{job="blackbox-postgres"} == 0
          for: 1m
          labels:
            severity: critical
          annotations:
            summary: "PostgreSQL is down"
            description: "PostgreSQL TCP probe failed for more than 1 minute."

extraScrapeConfigs: |
  - job_name: 'vault'
    metrics_path: /v1/sys/metrics
    params:
      format: [prometheus]
    scheme: http
    static_configs:
      - targets: ['secrets.local.io:32080']
    authorization:
      credentials_file: /var/run/secrets/kubernetes.io/serviceaccount/token

  - job_name: 'keycloak-quarkus-metrics'
    metrics_path: /metrics
    static_configs:
      - targets: ['keycloak-keycloakx-http.keycloak:9000']

  - job_name: 'keycloak-spi-metrics'
    metrics_path: /realms/master/metrics
    static_configs:
      - targets: ['keycloak-keycloakx-http.keycloak:80']

  # - job_name: 'blackbox-keycloak'
  #   metrics_path: /probe
  #   params:
  #     module: [http_2xx]
  #   static_configs:
  #     - targets:
  #         - https://sso.local.io:32443/realms/master
  #   relabel_configs:
  #     - source_labels: [__address__]
  #       target_label: __param_target
  #     - source_labels: [__param_target]
  #       target_label: instance
  #     - target_label: __address__
  #       replacement: blackbox.local.io:32080
  
  # - job_name: 'blackbox-postgres'
  #   metrics_path: /probe
  #   params:
  #     module: [tcp_connect]
  #   static_configs:
  #     - targets:
  #         - pg.local.io:32432
  #   relabel_configs:
  #     - source_labels: [__address__]
  #       target_label: __param_target
  #     - source_labels: [__param_target]
  #       target_label: instance
  #     - target_label: __address__
  #       replacement: blackbox.local.io:32080
  #     - targets: ['keycloak-metrics.keycloak:9000']

  # - job_name: 'app'
  #   metrics_path: /metrics
  #   scheme: http
  #   static_configs:
  #     - targets: ['flask-app-service.app:5000']
  - job_name: 'argo-cd application controller'
    metrics_path: /metrics
    scheme: http
    static_configs:
      - targets: ['argocd-application-controller-metrics.argocd:8082']
  - job_name: 'argo-cd applicationset controller'
    metrics_path: /metrics
    scheme: http
    static_configs:
      - targets: ['argocd-applicationset-controller-metrics.argocd:8080']
  - job_name: 'argo-cd notifications controller'
    metrics_path: /metrics
    scheme: http
    static_configs:
      - targets: ['argocd-notifications-controller-metrics.argocd:9001']
  - job_name: 'argo-cd redis'
    metrics_path: /metrics
    scheme: http
    static_configs:
      - targets: ['argocd-redis-metrics.argocd:9121']
  - job_name: 'argo-cd repo server'
    metrics_path: /metrics
    scheme: http
    static_configs:
      - targets: ['argocd-repo-server-metrics.argocd:8084']
  - job_name: 'argo-cd server'
    metrics_path: /metrics
    scheme: http
    static_configs:
      - targets: ['argocd-server-metrics.argocd:8083']

# Scrape configs can be added to target your Flask app
# additionalScrapeConfigs:
#   - job_name: 'python3-debian'
#     static_configs:
#        - targets: ['python3-debian.default.svc.cluster.local:8000']

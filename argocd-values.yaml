crds:
  install: true

global:
  domain: cd.local

redis-ha:
  enabled: false

controller:
  replicas: 1

server:
  replicas: 1
  ingress:
    enabled: true
    tls: false
    ingressClassName: nginx
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /
      #nginx.ingress.kubernetes.io/ssl-redirect: "true"
    rules:
    - host: cd.local
      http:
        paths:
        - pathType: Prefix
          path: "/"
          backend:
          service:
            name: argocd-server
            port:
              name: http
  extraArgs:
    - --insecure

rbac:
  policy: |
    g, argocd-admins, role:admin

repoServer:
  replicas: 1
  # envFrom:
  #   - secretRef:
  #       name: private-repo-secret       # Private Repo secret name

applicationSet:
  replicas: 1

configs:
  clusterCredentials:
    app-cluster:
      name: app-cluster
      server: https://mycluster.example.com
      config:
        bearerToken: "<authentication token>"
        tlsClientConfig:
          insecure: false
          caData: "<base64 encoded certificate>"
  repositories:
    pgadmin:
      type: helm
      name: pgadmin
      url: https://helm.runix.net
    reloader:
      type: helm
      url: https://stakater.github.io/stakater-charts
      name: reloader
      project: default
    bitnami:
      type: helm
      url: https://charts.bitnami.com/bitnami
      name: bitnami
      project: default
    external-secrets:
      type: helm
      name: eso
      url: https://charts.external-secrets.io
    ingress-nginx:
      type: helm
      name: ingress-nginx
      url: https://kubernetes.github.io/ingress-nginx
    grafana:
      type: helm
      name: grafana
      url: https://grafana.github.io/helm-charts
    prometheus:
      type: helm
      name: grafana
      url: https://prometheus-community.github.io/helm-charts
    otel-collector:
      type: helm
      name: otel-collector
      url: https://open-telemetry.github.io/opentelemetry-helm-charts
    flask-app:
      type: git
      url: https://github.com/sahil-sharma/k8s-stuff.git
      name: flask-app
      project: default

# How to add a Private Repo in ArgoCD
    # private-repo:
    # url: https://github.com/<username><repo-name>
    # name: private-repo
    # project: default
        
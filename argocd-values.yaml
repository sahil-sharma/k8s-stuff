crds:
  install: true

global:
  domain: cd.local.io

redis-ha:
  enabled: false

controller:
  replicas: 1

dex:
  enabled: false

server:
  replicas: 1
  extensions:
    enabled: true
    extensionList:
      - name: rollout-extension
        env:
          - name: EXTENSION_URL
            value: https://github.com/argoproj-labs/rollout-extension/releases/download/v0.3.4/extension.tar

  ingress:
    enabled: true
    tls: false
    ingressClassName: nginx
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /
      #nginx.ingress.kubernetes.io/ssl-redirect: "true"
    rules:
    - host: cd.local.io
      http:
        paths:
        - pathType: Prefix
          path: "/"
          backend:
          service:
            name: argocd-server
            port:
              name: http
  extraArgs:
    - --insecure

repoServer:
  replicas: 1
  # envFrom:
  #   - secretRef:
  #       name:  git-ssh-creds       # Private Repo secret name

applicationSet:
  replicas: 1

configs:
# To add SSH keys for repos
  # credentialTemplates:
  #   ssh-creds:
  #     url: git@github.com:sahil-sharma/go-welcome-app.git
  #     sshPrivateKey: |
  #       -----BEGIN OPENSSH PRIVATE KEY-----
  #       -----END OPENSSH PRIVATE KEY-----
  rbac:
    create: true
    scopes: "[groups]"
    policy.default: readonly
    policy.csv: |
      # === Role Bindings ===
      g, devops, role:admin
      g, engineering, role:eng
      g, data, role:readonly

      # === Role Definitions ===
      # Admin role - full access
      p, role:admin, *, *, */*, allow

      # Engineer role - get/list/create/update but NOT delete
      p, role:eng, applications, get, */*, allow
      p, role:eng, applications, list, */*, allow
      p, role:eng, applications, create, */*, allow
      p, role:eng, applications, update, */*, allow
      p, role:eng, projects, get, */*, allow
      p, role:eng, projects, list, */*, allow
      p, role:eng, repositories, get, */*, allow
      p, role:eng, repositories, list, */*, allow

      # ReadOnly role - just list/get
      p, role:readonly, *, get, */*, allow
      p, role:readonly, *, list, */*, allow
   
  cm:
    admin.enabled: false
    url: http://cd.local.io:32080
    oidc.config: |
      name: Keycloak
      issuer: https://sso.local.io:32443/realms/master
      clientID: argocd
      clientSecret: 
      requestedScopes: ["openid", "profile", "email", "groups"]
    oidc.tls.insecure.skip.verify: "true"
  repositories:
    pgadmin:
      type: helm
      name: pgadmin
      url: https://helm.runix.net
      project: default
    reloader:
      type: helm
      url: https://stakater.github.io/stakater-charts
      name: reloader
      project: default
    bitnami:
      type: helm
      url: https://charts.bitnami.com/bitnami
      name: bitnami
      project: default
    external-secrets:
      type: helm
      name: eso
      url: https://charts.external-secrets.io
      project: default
    ingress-nginx:
      type: helm
      name: ingress-nginx
      url: https://kubernetes.github.io/ingress-nginx
      project: default
    grafana:
      type: helm
      name: grafana
      url: https://grafana.github.io/helm-charts
      project: default
    prometheus:
      type: helm
      name: grafana
      url: https://prometheus-community.github.io/helm-charts
      project: default
    otel-collector:
      type: helm
      name: otel-collector
      url: https://open-telemetry.github.io/opentelemetry-helm-charts
      project: default
    flask-app:
      type: git
      url: https://github.com/sahil-sharma/k8s-stuff.git
      name: flask-app
      project: default
    welcome-app:
      type: git
      url: git@github.com:sahil-sharma/go-welcome-app.git
      name: go-welcome-app
      project: default

deploymentMode: SingleBinary

loki:
  memberlist:
    service:
      publishNotReadyAddresses: false
  auth_enabled: false
  #memberlistConfig:
  #  join_members: []
  #extraMemberlistConfig: {}
  commonConfig:
    replication_factor: 1
  schemaConfig:
    configs:
      - from: 2025-05-03
        #store: boltdb-shipper
        #object_store: filesystem
        store: tsdb
        object_store: s3
        schema: v13
        index:
          prefix: loki_index_
          period: 24h
  limits_config:
    volume_enabled: true
  #  allow_structured_metadata: false

  # storage_config:
  #   boltdb_shipper:
  #     active_index_directory: /var/loki/index
  #     cache_location: /var/loki/cache
  #     #shared_store: filesystem
  #   filesystem:
  #     directory: /var/loki/chunks

  ingester:
    chunk_encoding: snappy
  tracing:
    enabled: true
  querier:
    # Default is 4, if you have enough memory and CPU you can increase, reduce if OOMing
    max_concurrent: 1

  storage:
    bucketNames:
      chunks: loki-chunks
      ruler: loki-ruler
      admin: loki-admin

gateway:
  enabled: true
  ingress:
    enabled: false
    ingressClassName: nginx
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /$2
      # nginx.ingress.kubernetes.io/configuration-snippet: |
      #   proxy_set_header X-Scope-OrgID $remote_user;
    hosts:
      - host: logs.local.io
        paths:
          - path: /loki(/|$)(.*)
            pathType: ImplementationSpecific

singleBinary:
  extraArgs:
    - -config.expand-env=true
  persistence:
    enabled: true
    size: 1Gi
    storageClass: "local-path"
    accessModes:
      - ReadWriteOnce
  replicas: 1
  resources:
    limits:
      cpu: 1
      memory: 2Gi
    requests:
      cpu: 250m
      memory: 700Mi
  extraEnv:
    # Keep a little bit lower than memory limits
    - name: GOMEMLIMIT
      value: 3750MiB

chunksCache:
  # default is 500MB, with limited memory keep this smaller
  writebackSizeLimit: 10MB

# Enable minio for storage
minio:
  enabled: false

# Zero out replica counts of other deployment modes
backend:
  replicas: 0
read:
  replicas: 0
write:
  replicas: 0
ingester:
  replicas: 0
querier:
  replicas: 0
queryFrontend:
  replicas: 0
queryScheduler:
  replicas: 0
distributor:
  replicas: 0
compactor:
  replicas: 0
indexGateway:
  replicas: 0
bloomCompactor:
  replicas: 0
bloomGateway:
  replicas: 0
#singleBinary:
#  replicas: 0
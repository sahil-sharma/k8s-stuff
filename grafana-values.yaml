# adminUser: admin
# adminPassword: admin123

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  hosts:
    - dashboard.local.io

resources:
  requests:
    cpu: 100m
    memory: 128Mi
  limits:
    cpu: 200m
    memory: 256Mi

persistence:
  enabled: false

env:
  SSO_SECRET: "5qmKvVk4zegKYQEgiFiQphtfTPrroj47"
  DB_PASSWORD: "hello123"

grafana.ini:
  dataproxy:
    timeout: 600
  database:
    type: postgres
    host: postgres-postgresql.postgres:5432
    name: grafana_db
    user: grafana_admin
    password: ${DB_PASSWORD}
    sslmode: disable
  log:
    level: info
  auth:
    disable_login_form: true
  auth.anonymous:
    enabled: false
  auth.basic:
    enabled: false
  server:
    root_url: http://dashboard.local.io:32080
  auth.generic_oauth:
    enabled: true
    name: Keycloak
    client_id: grafana
    client_secret: ${SSO_SECRET}
    scopes: openid email profile roles
    allow_sign_up: true
    email_attribute_path: email
    login_attribute_path: username
    name_attribute_path: full_name
    auth_url: https://login.local.io:32443/realms/platform/protocol/openid-connect/auth
    token_url: https://login.local.io:32443/realms/platform/protocol/openid-connect/token
    api_url: https://login.local.io:32443/realms/platform/protocol/openid-connect/userinfo
    role_attribute_path: contains(realm_access.roles[*], 'admin') && 'Admin' || contains(realm_access.roles[*], 'editor') && 'Editor' || 'Viewer'
    allow_assign_grafana_admin: true
    tls_skip_verify_insecure: true

datasources:
  datasources.yaml:
    apiVersion: 1
    datasources:
      - name: Prometheus
        type: prometheus
        access: proxy
        url: http://metrics.local.io:32080
        isDefault: true
      - name: Loki
        type: loki
        access: proxy
        url: https://logs.local.io:32443
        isDefault: false
        jsonData:
          tlsSkipVerify: true
          timeout: 300
          maxLines: 100
        # jsonData:
        #   httpHeaderName1: "X-Scope-OrgID"
        # secureJsonData:
        #   httpHeaderValue1: "flask-app"

dashboardProviders:
  dashboardproviders.yaml:
    apiVersion: 1
    providers:
      - name: 'default'
        orgId: 1
        folder: ''
        type: file
        disableDeletion: false
        updateIntervalSeconds: 30
        options:
          path: /var/lib/grafana/dashboards/default

dashboards:
  default:
    keycloak-quarkus-metrics:
      gnetId: 14390
      revision: 7
      datasource: Prometheus
    keycloak-spi-metrics:
      gnetId: 19659
      revision: 1
      datasource: Prometheus
    argo-cd:
      gnetId: 14584
      revision: 1
      datasource: Prometheus
    prometheus:
      gnetId: 3662
      revision: 1
      datasource: Prometheus
#     flask-app:
#       gnetId: 11074  # Example dashboard ID for a Python app
#       revision: 1
#       datasource: Prometheus
#     flask-app-logs:
#       gnetId: 13639  # Grafana Loki Logs dashboard
#       revision: 1
#       datasource: Loki